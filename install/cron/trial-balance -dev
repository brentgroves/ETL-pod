# must be ended with a new line "LF" (Unix) and not "CRLF" (Windows)
# An empty line is required at the end of this file for a valid cron file.
# DO NOT EDIT THIS FILE - edit the master and reinstall.
# (/tmp/crontab.HHUOzY/crontab installed on Wed Jun  1 18:07:20 2022)
# (Cron version -- $Id: crontab.c,v 2.13 1994/01/17 03:20:37 vixie Exp $)
# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
SHELL=/bin/bash
LD_LIBRARY_PATH=/usr/oaodbc81/lib64
OASDK_ODBC_HOME=/usr/oaodbc81/lib64 
ODBCINI=/usr/oaodbc81/odbc64.ini 
PATH=/bin:/usr/bin:/home/bgroves@BUSCHE-CNC.COM/anaconda3/bin/python
* * * * * cd /home/bgroves@BUSCHE-CNC.COM/srcdocker/ETL-Pod/etl/PipeLine && ./TrialBalance.sh
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
